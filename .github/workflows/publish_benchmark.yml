name: Publish results of benchmarks

on:
  workflow_run:
    workflows: [Core Benchmarks]
    types:
      - completed

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo ${{ github.event.workflow_run.conclusion }}
          echo ${{ github.event.workflow_run.event }}
          echo ${{ github.event.workflow_run.pull_requests}}
          echo ${{ github.event.workflow_run.head_branch }}
          echo ${{ github.event.workflow_run.id }}
  pr-summary:
    name: Create a benchmark summary for the pull request
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'pull_request' }}
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set ownership (Github Actions workaround)
        run: |
          # https://github.com/actions/runner/issues/2033
          chown -R $(id -u):$(id -g) $PWD

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python3 -m venv venv
          . venv/bin/activate
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements-dev.txt

      - name: Get baseline benchmarks results
        uses: actions/cache@v4
        env:
          cache-name: benchmark-results
        with:
          key: ${{ env.cache-name }}-${{ runner.os }}-${{ github.event.workflow_run.pull_requests[0].base.sha }}
          path: |
            perf_benchmark.json
            synth-benchmark-basic.json
            synth-benchmark-full.json

      - uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ github.token }}
          name: perf_benchmark_results
          path: artifacts
      - uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ github.token }}
          name: synth_benchmark_results-basic
          path: artifacts
      - uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ github.token }}
          name: synth_benchmark_results-full
          path: artifacts

      - name: Create comment
        id: createComment
        run: |
          . venv/bin/activate
          {
            echo 'comment_content<<EOF'
            echo "## Benchmarks summary"
            echo "### Performance benchmarks"
            ci/print_benchmark_summary.py --precision 3 artifacts/perf_benchmark.json perf_benchmark.json
            echo
            echo "You can view all the metrics [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
            echo "### Synthesis benchmarks (basic)"
            ci/print_benchmark_summary.py --precision 0 artifacts/synth-benchmark-basic.json synth-benchmark-basic.json
            echo
            echo "### Synthesis benchmarks (full)"
            ci/print_benchmark_summary.py --precision 0 artifacts/synth-benchmark-full.json synth-benchmark-full.json
            echo
            echo EOF
          } >> "$GITHUB_OUTPUT"

      - name: Publish the summary as a comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ github.event.workflow_run.pull_requests[0].id }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${{steps.createComment.outputs.comment_content}}`
            })

  publish-benchmarks:
    name: Publish benchmarks
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' && github.event.workflow_run.head_branch == 'master' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ github.token }}
          name: perf_benchmark_results
          path: .
      - uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ github.token }}
          name: synth_benchmark_results-basic
          path: .
      - uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ github.token }}
          name: synth_benchmark_results-full
          path: .

      - name: Put results in a cache
        uses: actions/cache@v4
        env:
          cache-name: benchmark-results
        with:
          key: ${{ env.cache-name }}-${{ runner.os }}-${{ github.event.workflow_run.head_sha }}
          path: |
            perf_benchmark.json
            synth-benchmark-basic.json
            synth-benchmark-full.json

      - name: Store benchmark result (IPC)
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Performance (IPC)
          tool: 'customBiggerIsBetter'
          output-file-path: './perf_benchmark.json'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          benchmark-data-dir-path: "dev/benchmark"

      - name: Store synthesis benchmark result (basic)
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Fmax and LCs (basic)
          tool: 'customBiggerIsBetter'
          output-file-path: './synth-benchmark-basic.json'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          benchmark-data-dir-path: "dev/benchmark"

      - name: Store synthesis benchmark result (full)
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Fmax and LCs (full)
          tool: 'customBiggerIsBetter'
          output-file-path: './synth-benchmark-full.json'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          benchmark-data-dir-path: "dev/benchmark"